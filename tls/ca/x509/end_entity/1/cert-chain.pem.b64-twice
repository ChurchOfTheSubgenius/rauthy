LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUekNDQWRXZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREF6QW9NU1l3SkFZRFZRUUREQjFTWVhWMGFIa2cKUkdWMklFbFVJRU5CSUVsdWRHVnliV1ZrYVdGMFpUQWVGdzB5TXpFeE1EWXhNVFEzTkRWYUZ3MHlOREV4TVRVeApNVFUzTkRWYU1DOHhGekFWQmdOVkJBTU1EbEpoZFhSb2VTQkVaV1poZFd4ME1SUXdFZ1lEVlFRS0RBdFNZWFYwCmFIa2dUMGxFUXpCMk1CQUdCeXFHU000OUFnRUdCU3VCQkFBaUEySUFCQTZ4enhrVWdyL2h0VzBkMitNRnU0UU4KR0NKVEtMNVdpRVpxVnAyVHVZaDllamZpMkJIVkhxdVVtZU83VDBRZkRxTFhwTWc1bVNLVjVmUVdUVE1OUUxRNwpDeHNjdURLNGN1YkdYbGdJRnVpTjkzc2tuQmRVS1VWOFRMaGRPdDRJbWFPQnl6Q0J5REFmQmdOVkhTTUVHREFXCmdCUURMNzBBeTc1b1BsYytLTXhPM3NCUThoVko2REJXQmdOVkhSRUVUekJOaHdSL0FBQUJoZzVzYjJOaGJHaHYKYzNRNk9EQTRNSVlPYkc5allXeG9iM04wT2pnME5ET0NDV3h2WTJGc2FHOXpkSUlNY21Wa2FHRmpMbXh2WTJGcwpnZ3h5WVhWMGFIa3ViRzlqWVd3d0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQjBHCkExVWREZ1FXQkJTcFhtSDE2RHBKQlhWekdVVC9Uc3FiVDg0c3pUQVBCZ05WSFJNQkFmOEVCVEFEQVFFQU1Bb0cKQ0NxR1NNNDlCQU1EQTJnQU1HVUNNUURiNzk5ZHlHc2NDMkphRktTb3BIRVpJTjAxaWxvSmVNcncydGgwTXcvWQozeDlQUk5NYW1LdE0yWFhpMGZ5VjA0d0NNRm5SNUtTRm9NL0w2Q0J6NThxMTh1SXJlVFRyY0QzT0RIcGJXVVk0CkE5M2hsNmU4TzU2Y3VWLy9nY1VtclRFZ0pBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjZqQ0NBWENnQXdJQkFnSVVBeSs5QU11K2FENVhQaWpNVHQ3QVVQSVZTZWd3Q2dZSUtvWkl6ajBFQXdNdwpIVEViTUJrR0ExVUVBd3dTVW1GMWRHaDVJRVJsZGlCRFFTQlNiMjkwTUI0WERUSXpNRGd5T0RFeU5Ua3pOVm9YCkRUTXpNVEV3TXpFeE5ETXpOVm93S0RFbU1DUUdBMVVFQXd3ZFVtRjFkR2g1SUVSbGRpQkpWQ0JEUVNCSmJuUmwKY20xbFpHbGhkR1V3ZGpBUUJnY3Foa2pPUFFJQkJnVXJnUVFBSWdOaUFBUmRKMW1EbkwwUEZQNnRaUU1CdjFyYgpRSTkzYzlucnZiOGg2UkJNNksyUVl1Ujd3emdjenEvN00yNWJ4ZkNqU0tlZ2djVHhaRnBRMFhMWmQxL1NkN3JvClVoN2RqcUliKzdnQUUrQmpGNVQ4b2pmUjVmYUVFM2d5RXRmdUZqbUNOYUdqWmpCa01COEdBMVVkSXdRWU1CYUEKRkJWdHZmdHk3SHR4enlHT0hiUnVTdDRkZTFSOU1BNEdBMVVkRHdFQi93UUVBd0lCaGpBZEJnTlZIUTRFRmdRVQpBeSs5QU11K2FENVhQaWpNVHQ3QVVQSVZTZWd3RWdZRFZSMFRBUUgvQkFnd0JnRUIvd0lCQURBS0JnZ3Foa2pPClBRUURBd05vQURCbEFqQWZOREVycUFtWkxhb1FUcWVrZlV6eW5mYjNGenZzNVZDSEdCMFU2OVNDdXB5N2tPUE0KZ1BjVUdBZEorRXpUcWNrQ01RQzRYbHQ2amIzVmhESTZyL0lHK3FRRlVMWmNqTVNFbUU1WHg2RXNMaWYyRjhEbwpmYkhGaVN6YlBHZmxIdFVaYjlVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCM2pDQ0FXU2dBd0lCQWdJVUZXMjkrM0xzZTNIUElZNGR0RzVLM2gxN1ZIMHdDZ1lJS29aSXpqMEVBd013CkhURWJNQmtHQTFVRUF3d1NVbUYxZEdoNUlFUmxkaUJEUVNCU2IyOTBNQ0FYRFRJeU1EWXdNVEU1TlRJek1sb1kKRHpJd05UTXhNREk1TVRFME16TXlXakFkTVJzd0dRWURWUVFEREJKU1lYVjBhSGtnUkdWMklFTkJJRkp2YjNRdwpkakFRQmdjcWhrak9QUUlCQmdVcmdRUUFJZ05pQUFRSUhMa0lqSXJiZ3RzTWw1c2tPR3pQUVlWcTdlVU51TFBRCng1TjF5RXI5Wk5QVklYQzdxYVF5NlU1a3JoeUhhZ1RmS1ErbnV1RDUzdlRrTWVPUzVkTzJ4RTVFc3BnZE90RDgKWG84WXFFSW5td2ZnUEV5L0s1OHIrQ3V1a3ZNeFNYQ2pZekJoTUI4R0ExVWRJd1FZTUJhQUZCVnR2ZnR5N0h0eAp6eUdPSGJSdVN0NGRlMVI5TUE0R0ExVWREd0VCL3dRRUF3SUJoakFkQmdOVkhRNEVGZ1FVRlcyOSszTHNlM0hQCklZNGR0RzVLM2gxN1ZIMHdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QUtCZ2dxaGtqT1BRUURBd05vQURCbEFqQjgKZ2FLb0pwZkpGeE5ZUVY4ZUs4d2VRa3l3bGc0R256SVBqM1RKVnZ3Q1NuaG9QWHZYUld5UzV5dEE1TFNpUk04QwpNUURJTHBXeUhnUHJhQlJ0SUdnd2dwS3N1UHdWa0tsWjhKK1d0Y1dKeEJWU2VySUsyQjBkZ0F6Q0YraUNLV2NZCisrRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=